
#include "pch.h"
#include <iostream>
#include <iomanip>
#include <cstdlib>

using namespace std;

void bucketSort(int[], int, int[][10]); // прототип функции

int main()
{
	const int size = 10; // размер массивов
	int array[size] = { 5,8,19,12,97,3,45,23,77,100 }; // массив который нужно отсортировать
	int array1[size][size] = { 0 }; // массив в котором будут заноситься числа
	bucketSort(array, size, array1); // вызов функции
	cout << endl;
	system("pause");
	return 0;
}

void bucketSort(int ar[], int x, int ar1[][10]) // передаем функции оба массива
{
	// t - индекс элемента,куда переносить с блочного массива
	// обратно в 1ый массив
	int t = 0;
	// d - разряды чисел.
	int d = 1;
	// выполняем цикл 3 раза.Т.к. у нас наибольшее число 100 с 3мя разрядами
	// 1-ый для d=1,2-ой для d=10, 3ий для d=100
	for (int z = 0; z < 3; z++)
	{
		t = 0; // сброс счетчика в 0 при каждом проходе цикла
		for (int i = 0; i < x; i++)
		{
			// каждый элемент 1го массива, приваиваем 2ому массиву,где строка
			// которого получается путём деления i на d и остаток от деления
			// на 10, строка остается та же i
			ar1[(ar[i] / d) % 10][i] = ar[i];
		}
		// присваеваем обратно элементы со 2го массива,не равные 0,
		// обратно в 1ый массив по порядку, в котором они распределились
		for (int i = 0; i < x; i++)
		{
			for (int j = 0; j < x; j++)
				if (ar1[i][j] != 0)
				{
					ar[t] = ar1[i][j];
					t++;
				}
		}
		// для наглядности - печать 2го блочного массива и 1го массива
		cout << setw(3) << " 0 " << " 1 " << " 2 "
			<< " 3 " << " 4 "
			<< " 5 " << " 6 "
			<< " 7 " << " 8 "
			<< " 9 " << endl << endl;

		for (int i = 0; i < x; i++)
		{
			cout << i << " ";
			for (int j = 0; j < x; j++)
				cout << setw(3) << ar1[i][j] << " ";
			cout << endl;
		}
		cout << endl << endl << "array[10] = ";
		for (int i = 0; i < x; i++)
			cout << ar[i] << " ";
		cout << endl << endl;
		// обнуляем блочный массив
		for (int i = 0; i < x; i++)
			for (int j = 0; j < x; j++)
				ar1[i][j] = 0;
		// в конце каждого цикла умножаем d на 10 для следующего разряда
		d *= 10;
	}
}


